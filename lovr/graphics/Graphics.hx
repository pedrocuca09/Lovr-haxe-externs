package lovr.graphics;

@:native("lovr.graphics")
extern class Graphics {
  public function compileShader():lovr.data.Blob;
  public function getBackgroundColor():Float;
  public function getDefaultFont():lovr.graphics.Font;
  public function getDevice():Float;
  public function getFeatures():Bool;
  public function getLimits():Float;
  public function getWindowPass():lovr.graphics.Pass;
  public function isFormatSupported():Bool;
  public function isHDR():Bool;
  public function isTimingEnabled():Bool;
  public function newBuffer():lovr.graphics.Buffer;
  public function newFont():lovr.graphics.Font;
  public function newMaterial():lovr.graphics.Material;
  public function newMesh():lovr.graphics.Mesh;
  public function newModel():lovr.graphics.Model;
  public function newPass():lovr.graphics.Pass;
  public function newSampler():lovr.graphics.Sampler;
  public function newShader():lovr.graphics.Shader;
  public function newTexture():lovr.graphics.Texture;
  public function newTextureView():lovr.graphics.Texture;
  public function graphicsInitialize(arg0:Dynamic):String;
  public function graphicsIsInitialized(arg0:Dynamic):String;
  public function graphicsIsTimingEnabled(arg0:Dynamic):String;
  public function graphicsSetTimingEnabled(arg0:Dynamic):String;
  public function graphicsSubmit(arg0:Dynamic):String;
  public function graphicsPresent(arg0:Dynamic):String;
  public function graphicsWait(arg0:Dynamic):String;
  public function graphicsGetDevice(arg0:Dynamic):String;
  public function graphicsGetFeatures(arg0:Dynamic):String;
  public function graphicsGetLimits(arg0:Dynamic):String;
  public function graphicsIsFormatSupported(arg0:Dynamic):String;
  public function graphicsIsHDR(arg0:Dynamic):String;
  public function graphicsGetBackgroundColor(arg0:Dynamic):String;
  public function graphicsSetBackgroundColor(arg0:Dynamic):String;
  public function graphicsGetWindowPass(arg0:Dynamic):String;
  public function graphicsGetDefaultFont(arg0:Dynamic):String;
  public function graphicsNewBuffer(arg0:Dynamic):String;
  public function graphicsNewTexture(arg0:Dynamic):String;
  public function graphicsNewTextureView(arg0:Dynamic):String;
  public function graphicsNewSampler(arg0:Dynamic):String;
  public function graphicsCompileShader(arg0:Dynamic):String;
  public function graphicsNewShader(arg0:Dynamic):String;
  public function graphicsNewMaterial(arg0:Dynamic):String;
  public function graphicsNewFont(arg0:Dynamic):String;
  public function graphicsNewMesh(arg0:Dynamic):String;
  public function graphicsNewModel(arg0:Dynamic):String;
  public function graphicsNewPass(arg0:Dynamic):String;
  // Static methods
  static public function setBackgroundColor(r:Float, g:Float, b:Float, ?a:Float):Void;
  static public function getBackgroundColor():Array<Float>;
  static public function newPass():Pass;
  static public function getPass():Pass;
  static public function getWindowPass():Pass;
  static public function newBuffer():Buffer;
  static public function getBuffer():Buffer;
  static public function newTexture():Texture;
  static public function newShader():Shader;
  static public function newMaterial():Material;
  static public function newFont():Font;
  static public function newMesh():Mesh;
  static public function newModel():Model;
  static public function newSampler():Sampler;
  static public function compileShader():lovr.data.Blob;
  static public function getDefaultFont():Font;
  static public function getDevice():Dynamic;
  static public function getFeatures():Dynamic;
  static public function getLimits():Dynamic;
  static public function isFormatSupported():Bool;
  static public function isTimingEnabled():Bool;
  static public function setTimingEnabled(enabled:Bool):Void;
  static public function present():Void;
  static public function submit():Void;
  static public function wait():Void;
}
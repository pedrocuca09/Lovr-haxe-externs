package lovr.filesystem;

@:native("lovr.filesystem")
extern class Filesystem {
public function append():Float;
public function createDirectory():Bool;
public function FileAction():Void;
public function getAppdataDirectory():String;
public function getDirectoryItems():Dynamic;
public function getExecutablePath():String;
public function getIdentity():String;
public function getLastModified():Float;
public function getRealDirectory():String;
public function getRequirePath():String;
public function getSaveDirectory():String;
public function getSize():Float;
public function getSource():String;
public function getUserDirectory():String;
public function getWorkingDirectory():String;
public function isDirectory():Bool;
public function isFile():Bool;
public function isFused():Bool;
public function load():Dynamic;
public function mount():Bool;
public function newBlob():lovr.data.Blob;
public function newFile():lovr.filesystem.File;
public function OpenMode():Void;
public function read():String;
public function remove():Bool;
public function setIdentity():Void;
public function setRequirePath():Void;
public function unmount():Bool;
public function unwatch():Void;
public function watch():Void;
public function write():Bool;
  public function filesystemAppend():String;
  public function filesystemCreateDirectory():String;
  public function filesystemGetAppdataDirectory():String;
  public function filesystemGetDirectoryItems():String;
  public function filesystemGetBundlePath():String;
  public function filesystemGetExecutablePath():String;
  public function filesystemGetIdentity():String;
  public function filesystemGetLastModified():String;
  public function filesystemGetRealDirectory():String;
  public function filesystemGetRequirePath():String;
  public function filesystemGetSaveDirectory():String;
  public function filesystemGetSize():String;
  public function filesystemGetSource():String;
  public function filesystemGetUserDirectory():String;
  public function filesystemGetWorkingDirectory():String;
  public function filesystemIsDirectory():String;
  public function filesystemIsFile():String;
  public function filesystemIsFused():String;
  public function filesystemLoad():String;
  public function filesystemMount():String;
  public function filesystemNewBlob():String;
  public function filesystemRead():String;
  public function filesystemRemove():String;
  public function filesystemSetIdentity():String;
  public function filesystemSetRequirePath():String;
  public function filesystemSetSource():String;
  public function filesystemUnmount():String;
  public function filesystemUnwatch():String;
  public function filesystemWatch():String;
  public function filesystemWrite():String;
  public function filesystemNewFile():String;
}